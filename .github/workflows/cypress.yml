name: Cypress Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false # Don't cancel other matrix jobs if one fails
      matrix:
        browser: [chrome, edge]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      - name: Install Cypress binary
        run: pnpm exec cypress install

      - name: Verify Cypress
        run: pnpm exec cypress verify

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6.9.2
        with:
          install: false
          start: pnpm dev --host
          wait-on: 'http://localhost:4444'
          wait-on-timeout: 120
          browser: ${{ matrix.browser }}
          record: false
          parallel: false
          config: video=false,screenshotOnRunFailure=true
        env:
          # Pass any environment variables
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browser }}
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos-${{ matrix.browser }}
          path: cypress/videos
          if-no-files-found: ignore
